<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://code.alibabatech.com/schema/dubbo
        http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
    <!--http：用于定义相关权限控制
     指定哪些资源不需要进行权限校验，可以使用通配符 -->
    <security:http security="none" pattern="/js/**"/>
    <security:http security="none" pattern="/css/**"/>
    <security:http security="none" pattern="/img/**"/>
    <security:http security="none" pattern="/plugins/**"/>
    <security:http security="none" pattern="/login.html"/>
    <!--
           http:用于定义相关权限控制
           auto-config:是否自动配置
                    设置为true时框架会提供默认的一些配置，例如提供默认的登录页面、登出处理等                    
                    设置为false时需要显示提供登录表单配置，否则会报错
           use-expressions:用于指定intercept-url中的access属性是否使用表达式
       -->
    <security:http auto-config="true" use-expressions="true">

        <security:headers >
            <!--设置在页面可以通过iframe访问受保护的页面,默认为不允许访问-->
            <security:frame-options policy="SAMEORIGIN"></security:frame-options>
        </security:headers>
        <!--认证通过就可以访问-->
        <security:intercept-url pattern="/pages/**" access="isAuthenticated()"/>
        <!--如果我们要使用自己的登录页面,配置登录表单 页面提交登录表单请求是框架负责处理
                       login-page:登录页面url
                       login-processing-url:确认跳转页面
                       default-target-url:登录成功跳转页面
                       authentication-failure-url:登录失败跳转页面
           -->
        <security:form-login login-page="/login.html"
                             username-parameter="username"
                             password-parameter="password"
                             login-processing-url="/login.do"
                             default-target-url="/pages/main.html"
                             authentication-failure-url="/login.html"></security:form-login>

        <!-- csrf：对应CsrfFilter过滤器   
      disabled：是否启用CsrfFilter过滤器，如果使用自定义登录页面需要关闭此项，
                  否则 登录操作会被禁用（403)-->
        <security:csrf disabled="true"></security:csrf> <!--true:关闭此项-->

        <!--logout:退出登录
           logout-url:退出操作对应请求的路径
           logout-success-url:退出成功跳转的页面-->

        <security:logout logout-url="/logout.do" logout-success-url="/login.html" invalidate-session="true"></security:logout>


    </security:http>

    <!--认证管理器用于认证操作-->
    <security:authentication-manager>
        <!--认证提供者,执行具体认证逻辑-->
        <security:authentication-provider user-service-ref="springSecurityUserService">

            <!--指定密码加密对象-->
            <security:password-encoder ref="PasswordEncoder"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

    <!--配置加密对象-->
    <bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="PasswordEncoder"></bean>

    <!--开启注解方式权限控制-->
    <security:global-method-security pre-post-annotations="enabled"/>
</beans>